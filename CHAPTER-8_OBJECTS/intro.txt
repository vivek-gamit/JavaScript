 🧱Chapter 8: Objects
 (JavaScript – Learn Everything Series by Sheryians Coding School)
 🧠 What is an Object?
 Objects in JavaScript are like real-world records – a collection of key-value pairs.
 They help us store structured data (like a student, a product, or a user profile).
 js
 let student = {
 name: "Ravi",
 age: 21,
 isEnrolled: true
 };
 
 🔑 Key-Value Structure
 Keys are always strings (even if you write them as numbers or identifiers)
 Values can be anything – string, number, array, object, function, etc.
 js
 console.log(student["name"]); // Ravi  
console.log(student.age);     
// 21
 32/36
28/06/2025, 15:10
 Complete JS Course Syllabus

 📍 Dot vs Bracket Notation
 Use dot notation for fixed key names
 Use bracket notation for dynamic or multi-word keys
 js
 student["full name"] = "Ravi Kumar";  // ✅
  
student.course = "JavaScript";        
// ✅

 🏗 Nesting and Deep Access
 Objects can have nested objects (objects inside objects)
 js
 let user = {
 name: "Amit",
 address: {
 city: "Delhi",
 pincode: 110001
 }
 };
 console.log(user.address.city); // Delhi
 ✂ Object Destructuring
 You can extract values directly:
 js
 let { name, age } = student;
 For nested objects:
 33/36
28/06/2025, 15:10
 Complete JS Course Syllabus
 js
 let {
 address: { city }
 } = user;

 🔁 Looping Through Objects
 for-in loop
 js
 for (let key in student) {
 console.log(key, student[key]);
 }
 Object.keys(), Object.values(), Object.entries()
 js
 Object.keys(student);     
// ["name", "age", "isEnrolled"]  
Object.entries(student);  // [["name", "Ravi"], ["age", 21], ...]

 📦 Copying Objects
 Shallow Copy (one level deep)
 js
 let newStudent = { ...student };        
let newOne = Object.assign({}, student);
 Deep Copy (nested levels)
 js
 let deepCopy = JSON.parse(JSON.stringify(user)); 
34/36
28/06/2025, 15:10
 Complete JS Course Syllabus

 ❗Note: JSON-based copy works only for plain data (no functions, undefined, etc.)

 ❓ Optional Chaining
 Avoids errors if a nested property is undefined:
 js
 console.log(user?.address?.city);    
// Delhi  
console.log(user?.profile?.email);  // undefined (no error)

 🧠 Computed Properties
 You can use variables as keys:
 js
 let key = "marks";
 let report = {
 [key]: 89
 };

 ⚠ Common Confusions
 Shallow copy copies only the first level
 for-in
 includes inherited keys (be cautious!)
 delete obj.key
 removes the property
 Spread ≠ deep copy

 🧠 Mindset
 35/36
28/06/2025, 15:10
 Complete JS Course Syllabus
 Objects are structured state – perfect for modeling anything complex: a user, a form, a product,
 etc.
 Use destructuring, chaining, and dynamic keys wisely.

 🧪 Practice Zone
 1. Create an object for a book (title, author, price)
 2. Access properties using both dot and bracket
 3. Write a nested object (user with address and location)
 4. Destructure name and age from a student object
 5. Loop through keys and values of an object
 6. Convert object to array using 
Object.entries()
 7. Copy an object using spread operator
 8. Create a deep copy of an object with nested structure
 9. Use optional chaining to safely access deep values
 10. Use a variable as a key using computed properties
